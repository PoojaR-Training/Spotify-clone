{"ast":null,"code":"import * as React from 'react';\nimport Next from './icons/Next';\nimport Pause from './icons/Pause';\nimport Play from './icons/Play';\nimport Previous from './icons/Previous';\nimport { px, styled } from '../styles';\nvar Wrapper = styled('div')({}, function (_a) {\n  var style = _a.style;\n  return {\n    alignItems: 'center',\n    display: 'flex',\n    height: px(style.h),\n    justifyContent: 'center',\n    '@media (max-width: 767px)': {\n      padding: px(10)\n    },\n    '> div': {\n      minWidth: px(style.h),\n      textAlign: 'center'\n    },\n    button: {\n      color: style.c,\n      fontSize: px(16),\n      '&.rswp__toggle': {\n        fontSize: px(28)\n      }\n    }\n  };\n}, 'ControlsRSWP');\nexport default function Controls(props) {\n  var isExternalDevice = props.isExternalDevice,\n    isPlaying = props.isPlaying,\n    nextTracks = props.nextTracks,\n    onClickNext = props.onClickNext,\n    onClickPrevious = props.onClickPrevious,\n    onClickTogglePlay = props.onClickTogglePlay,\n    previousTracks = props.previousTracks,\n    _a = props.styles,\n    color = _a.color,\n    height = _a.height;\n  return React.createElement(Wrapper, {\n    style: {\n      c: color,\n      h: height\n    }\n  }, React.createElement(\"div\", null, (!!previousTracks.length || isExternalDevice) && React.createElement(\"button\", {\n    \"aria-label\": \"Previous Track\",\n    onClick: onClickPrevious,\n    type: \"button\"\n  }, React.createElement(Previous, null))), React.createElement(\"div\", null, React.createElement(\"button\", {\n    \"aria-label\": isPlaying ? 'Pause' : 'Play',\n    className: \"rswp__toggle\",\n    onClick: onClickTogglePlay,\n    type: \"button\"\n  }, isPlaying ? React.createElement(Pause, null) : React.createElement(Play, null))), React.createElement(\"div\", null, (!!nextTracks.length || isExternalDevice) && React.createElement(\"button\", {\n    \"aria-label\": \"Next Track\",\n    onClick: onClickNext,\n    type: \"button\"\n  }, React.createElement(Next, null))));\n}","map":{"version":3,"sources":["../../src/components/Controls.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO;AAE9B,OAAO,IAAI,MAAM,cAAc;AAC/B,OAAO,KAAK,MAAM,eAAe;AACjC,OAAO,IAAI,MAAM,cAAc;AAC/B,OAAO,QAAQ,MAAM,kBAAkB;AAEvC,SAAS,EAAE,EAAE,MAAM,QAAQ,WAAW;AAetC,IAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAC3B,CAAA,CAAE,EACF,UAAC,EAAsB,EAAA;MAApB,KAAK,GAAA,EAAA,CAAA,KAAA;EAAoB,OAAC;IAC3B,UAAU,EAAE,QAAQ;IACpB,OAAO,EAAE,MAAM;IACf,MAAM,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACnB,cAAc,EAAE,QAAQ;IAExB,2BAA2B,EAAE;MAC3B,OAAO,EAAE,EAAE,CAAC,EAAE;KACf;IAED,OAAO,EAAE;MACP,QAAQ,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,SAAS,EAAE;KACZ;IAED,MAAM,EAAE;MACN,KAAK,EAAE,KAAK,CAAC,CAAC;MACd,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC;MAEhB,gBAAgB,EAAE;QAChB,QAAQ,EAAE,EAAE,CAAC,EAAE;MAChB;IACF;GACF;AAvB2B,CAuB1B,EACF,cAAc,CACf;AAED,eAAc,SAAU,QAAQ,CAAC,KAAY,EAAA;EAEzC,IAAA,gBAAgB,GAQd,KAAK,CAAA,gBARS;IAChB,SAAS,GAOP,KAAK,CAAA,SAPE;IACT,UAAU,GAMR,KAAK,CAAA,UANG;IACV,WAAW,GAKT,KAAK,CAAA,WALI;IACX,eAAe,GAIb,KAAK,CAAA,eAJQ;IACf,iBAAiB,GAGf,KAAK,CAAA,iBAHU;IACjB,cAAc,GAEZ,KAAK,CAAA,cAFO;IACd,EAAA,GACE,KAAK,CAAA,MADkB;IAAf,KAAK,GAAA,EAAA,CAAA,KAAA;IAAE,MAAM,GAAA,EAAA,CAAA,MAAE;EAG3B,OACE,KAAA,CAAA,aAAA,CAAC,OAAO,EAAA;IAAC,KAAK,EAAE;MAAE,CAAC,EAAE,KAAK;MAAE,CAAC,EAAE;IAAM;EAAE,CAAA,EACrC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACG,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,IAAI,gBAAgB,KAC3C,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;IAAA,YAAA,EAAmB,gBAAgB;IAAC,OAAO,EAAE,eAAe;IAAE,IAAI,EAAC;EAAQ,CAAA,EACzE,KAAA,CAAA,aAAA,CAAC,QAAQ,EAAA,IAAA,CAAG,CAEf,CACG,EACN,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;IAAA,YAAA,EACc,SAAS,GAAG,OAAO,GAAG,MAAM;IACxC,SAAS,EAAC,cAAc;IACxB,OAAO,EAAE,iBAAiB;IAC1B,IAAI,EAAC;EAAQ,CAAA,EAEZ,SAAS,GAAG,KAAA,CAAA,aAAA,CAAC,KAAK,EAAA,IAAA,CAAG,GAAG,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,IAAA,CAAG,CAC1B,CACL,EACN,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACG,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,IAAI,gBAAgB,KACvC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;IAAA,YAAA,EAAmB,YAAY;IAAC,OAAO,EAAE,WAAW;IAAE,IAAI,EAAC;EAAQ,CAAA,EACjE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,IAAA,CAAG,CAEX,CACG,CACE;AAEd","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport Next from './icons/Next';\nimport Pause from './icons/Pause';\nimport Play from './icons/Play';\nimport Previous from './icons/Previous';\nimport { px, styled } from '../styles';\nvar Wrapper = styled('div')({}, function (_a) {\n    var style = _a.style;\n    return ({\n        alignItems: 'center',\n        display: 'flex',\n        height: px(style.h),\n        justifyContent: 'center',\n        '@media (max-width: 767px)': {\n            padding: px(10),\n        },\n        '> div': {\n            minWidth: px(style.h),\n            textAlign: 'center',\n        },\n        button: {\n            color: style.c,\n            fontSize: px(16),\n            '&.rswp__toggle': {\n                fontSize: px(28),\n            },\n        },\n    });\n}, 'ControlsRSWP');\nexport default function Controls(props) {\n    var isExternalDevice = props.isExternalDevice, isPlaying = props.isPlaying, nextTracks = props.nextTracks, onClickNext = props.onClickNext, onClickPrevious = props.onClickPrevious, onClickTogglePlay = props.onClickTogglePlay, previousTracks = props.previousTracks, _a = props.styles, color = _a.color, height = _a.height;\n    return (React.createElement(Wrapper, { style: { c: color, h: height } },\n        React.createElement(\"div\", null, (!!previousTracks.length || isExternalDevice) && (React.createElement(\"button\", { \"aria-label\": \"Previous Track\", onClick: onClickPrevious, type: \"button\" },\n            React.createElement(Previous, null)))),\n        React.createElement(\"div\", null,\n            React.createElement(\"button\", { \"aria-label\": isPlaying ? 'Pause' : 'Play', className: \"rswp__toggle\", onClick: onClickTogglePlay, type: \"button\" }, isPlaying ? React.createElement(Pause, null) : React.createElement(Play, null))),\n        React.createElement(\"div\", null, (!!nextTracks.length || isExternalDevice) && (React.createElement(\"button\", { \"aria-label\": \"Next Track\", onClick: onClickNext, type: \"button\" },\n            React.createElement(Next, null))))));\n}\n//# sourceMappingURL=Controls.js.map"]},"metadata":{},"sourceType":"module"}