[{"/Users/imac/Documents/training/Final/spotify-clone/src/index.js":"1","/Users/imac/Documents/training/Final/spotify-clone/src/DataLayer.js":"2","/Users/imac/Documents/training/Final/spotify-clone/src/reducer.js":"3","/Users/imac/Documents/training/Final/spotify-clone/src/App.js":"4","/Users/imac/Documents/training/Final/spotify-clone/src/Login.js":"5","/Users/imac/Documents/training/Final/spotify-clone/src/spotify.js":"6","/Users/imac/Documents/training/Final/spotify-clone/src/Player.js":"7","/Users/imac/Documents/training/Final/spotify-clone/src/SideBar.js":"8","/Users/imac/Documents/training/Final/spotify-clone/src/Search.js":"9","/Users/imac/Documents/training/Final/spotify-clone/src/Body.js":"10","/Users/imac/Documents/training/Final/spotify-clone/src/SideBarOptions.js":"11","/Users/imac/Documents/training/Final/spotify-clone/src/SongRow.js":"12","/Users/imac/Documents/training/Final/spotify-clone/src/Footer.js":"13","/Users/imac/Documents/training/Final/spotify-clone/src/Header.js":"14"},{"size":395,"mtime":1682133524093,"results":"15","hashOfConfig":"16"},{"size":379,"mtime":1682133524091,"results":"17","hashOfConfig":"16"},{"size":805,"mtime":1682133524093,"results":"18","hashOfConfig":"16"},{"size":1761,"mtime":1682135913909,"results":"19","hashOfConfig":"16"},{"size":346,"mtime":1682133524092,"results":"20","hashOfConfig":"16"},{"size":869,"mtime":1682144644177,"results":"21","hashOfConfig":"16"},{"size":1118,"mtime":1682133524092,"results":"22","hashOfConfig":"16"},{"size":1711,"mtime":1682139097634,"results":"23","hashOfConfig":"16"},{"size":2569,"mtime":1682420007304,"results":"24","hashOfConfig":"16"},{"size":1862,"mtime":1682133524091,"results":"25","hashOfConfig":"16"},{"size":496,"mtime":1682133524093,"results":"26","hashOfConfig":"16"},{"size":873,"mtime":1682135679378,"results":"27","hashOfConfig":"16"},{"size":3462,"mtime":1682133524092,"results":"28","hashOfConfig":"16"},{"size":751,"mtime":1682133524092,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"sgx9oq",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"/Users/imac/Documents/training/Final/spotify-clone/src/index.js",[],["66","67"],"/Users/imac/Documents/training/Final/spotify-clone/src/DataLayer.js",[],"/Users/imac/Documents/training/Final/spotify-clone/src/reducer.js",[],"/Users/imac/Documents/training/Final/spotify-clone/src/App.js",["68","69","70"],"import './App.css';\nimport Login from './Login';\nimport React, {useState,useEffect} from 'react';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n\nconst spotify = new SpotifyWebApi(); // creates a instance of spotifyWebApi\n\nfunction App() {\n  const smallScreen = useMediaQuery('(max-width: 600px)');\n\n  const [sideBar,setSideBar] = useState(!smallScreen);\n\n  const [playlist, setPlaylist] = useState('37i9dQZEVXbNG2KDcFcKOF');\n  \n  useEffect(()=>{\n    setSideBar(!smallScreen)\n  },[smallScreen])\n\n  const [{user, token}, dispatch] = useDataLayerValue();\n\n  useEffect(()=>{\n    const hash = getTokenFromUrl();\n    window.location.hash=\"\";\n    const _token = hash.access_token;\n\n    if(_token){\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      })\n\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then((user)=>{\n        dispatch({\n          type: \"SET_USER\",\n          user //shorthand for user: user cause dipatch has same property name\n        })\n      })\n\n      spotify.getUserPlaylists().then((playlists)=>{\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        })\n      })\n      \n    }\n  },[])\n  useEffect(()=>{\n    spotify.getPlaylist(playlist).then(response => {\n      dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response,\n      })\n    })\n  },[playlist]);\n\n  return (\n    <div className=\"App\">\n     \n     {token?<Player setPlaylist={setPlaylist} sideBar={sideBar} setSideBar={setSideBar} smallScreen={smallScreen}/>:<Login />}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/imac/Documents/training/Final/spotify-clone/src/Login.js",["71"],"import React from 'react';\nimport './Login.css';\nimport {loginUrl} from './spotify.js';\n\nfunction Login() {\n    return (\n        <div className=\"login\">\n            <img src=\"https://1000logos.net/wp-content/uploads/2017/08/Spotify-symbol.jpg\" />\n            <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\n        </div>\n    )\n}\n\nexport default Login\n","/Users/imac/Documents/training/Final/spotify-clone/src/spotify.js",[],"/Users/imac/Documents/training/Final/spotify-clone/src/Player.js",[],"/Users/imac/Documents/training/Final/spotify-clone/src/SideBar.js",["72"],"import React from \"react\";\nimport \"./SideBar.css\";\nimport SideBarOptions from \"./SideBarOptions\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Logout from \"@material-ui/icons/ExitToApp\";\nimport { useDataLayerValue } from \"./DataLayer\";\nimport { Link } from \"react-router-dom\";\n\nconst SideBar = ({ sideBar, setSideBar, smallScreen, setPlaylist }) => {\n  const [{ playlists }, dispatch] = useDataLayerValue();\n\n  const handleClick = () => {\n    if (!smallScreen) return;\n\n    setSideBar(!sideBar);\n  };\n\n  return (\n    <div\n      className={sideBar ? \"SideBar-active\" : \"SideBar\"}\n      onClick={() => handleClick()}\n    >\n      <img\n        className=\"sidebarLogo\"\n        src=\"https://1000logos.net/wp-content/uploads/2017/08/Spotify-symbol.jpg\"\n        alt=\"spotify-logo\"\n      />\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n        <SideBarOptions\n          Icon={HomeIcon}\n          id={\"37i9dQZEVXbNG2KDcFcKOF\"}\n          setPlaylist={setPlaylist}\n          title=\"Home\"\n        />\n      </Link>\n      <Link to=\"/search\" style={{ textDecoration: \"none\" }}>\n        <SideBarOptions Icon={SearchIcon} title=\"Search\" />\n      </Link>\n      <a href=\"http://localhost:3000\">\n        <SideBarOptions Icon={Logout} title=\"Logout\" />\n      </a>\n      <br />\n      <strong className=\"sidebar_title\">PLAYLISTS</strong>\n      <hr />\n      <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n        {playlists?.items?.map((playlist) => (\n          <SideBarOptions\n            title={playlist.name}\n            setPlaylist={setPlaylist}\n            id={playlist.id}\n          />\n        ))}\n      </Link>\n    </div>\n  );\n};\n\nexport default SideBar;\n","/Users/imac/Documents/training/Final/spotify-clone/src/Search.js",["73"],"/Users/imac/Documents/training/Final/spotify-clone/src/Body.js",["74"],"import React,{useState} from 'react';\nimport './Body.css';\nimport { useDataLayerValue } from './DataLayer';\nimport Header from './Header';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SongRow from './SongRow';\nimport { Scrollbar } from \"react-scrollbars-custom\";\nimport Footer from './Footer';\n\nconst Body = ({sideBar, setSideBar, smallScreen}) => {\n    const [{discover_weekly}, dispatch] = useDataLayerValue();\n\n    const [playingTrack, setPlayingTrack] = useState();\n\n    function chooseTrack(track){\n        setPlayingTrack(track)\n    }\n\n    return (\n        <div className={smallScreen?\"body active\":\"body\"}>\n            <Scrollbar style={{ width: `${smallScreen?\"96vw\":\"77.5vw\"}`, height: '100vh' }}>\n            <Header sideBar={sideBar} setSideBar={setSideBar} smallScreen={smallScreen}/>\n            <div className=\"body_info\">\n                <img src={discover_weekly?.images[0].url} alt=\"\" />\n                <div className=\"body_infoText\">\n                    <strong>PLAYLIST</strong>\n                    <h2>{discover_weekly?.name}</h2>\n                    <p>{discover_weekly?.description}</p>\n                </div>\n            </div>\n            <div className=\"body_songs\">\n                <div className=\"body_icons\">\n                    <PlayCircleFilledIcon className=\"body_playBtn\"/>\n                    <FavoriteIcon fontSize=\"large\"/>\n                    <MoreHorizIcon />\n                </div>\n                {discover_weekly?.tracks.items.map(item =>(\n                    <SongRow track={item.track} chooseTrack={chooseTrack}/>\n                ))}\n            </div>\n            </Scrollbar>\n          <Footer trackUri={playingTrack?.uri}/>\n        </div>\n    )\n}\n\nexport default Body\n","/Users/imac/Documents/training/Final/spotify-clone/src/SideBarOptions.js",[],"/Users/imac/Documents/training/Final/spotify-clone/src/SongRow.js",["75","76"],"import React from 'react';\nimport './SongRow.css';\nimport {useDataLayerValue} from './DataLayer';\n\nconst SongRow = ({track, chooseTrack}) => {\n    const [{user}, dispatch] = useDataLayerValue();\n    const handle = () => {\n       /* if(user?.product==='open' || user?.product==='free') {\n            alert('You need to have a Spotify Premium Account for this action');\n            return;\n        }*/\n        chooseTrack(track);\n    }\n    return (\n        <div className=\"songRow\" onClick={()=>handle()}>\n            <img src={track.album.images[0].url} alt=\"img\" />\n            <div className=\"songRow_info\">\n                <h1>{track.name}</h1>\n                <p>\n                    {track.artists.map(artist => artist.name).join(\", \")}-{\" \"}\n                    {track.album.name}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default SongRow\n","/Users/imac/Documents/training/Final/spotify-clone/src/Footer.js",["77"],"// import SpotifyPlayer  from 'react-spotify-web-playback';\n// import {useDataLayerValue} from './DataLayer';\n// import React from 'react';\n\n// const Footer = (trackUri) => {\n//     const [{token}, dispatch] = useDataLayerValue();\n//     console.log('helo')\n//     // if(!token) return null;\n//     return(\n//         <SpotifyPlayer \n//             token={token}\n//             showSaveIcon\n//             uris={trackUri ? [trackUri]:[]} />\n\n//     )\n// }\n// export default Footer\n\n//  import './Footer.css';\n\n// import PlayCircleOutlineOutlinedIcon from '@material-ui/icons/PlayCircleOutlineOutlined';\n// import SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\n// import SkipNextIcon from '@material-ui/icons/SkipNext';\n// import ShuffleIcon from '@material-ui/icons/Shuffle';\n// import RepeatIcon from '@material-ui/icons/Repeat';\n// import { Grid, Slider } from '@material-ui/core';\n// import PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\n// import VolumeDownIcon from '@material-ui/icons/VolumeDown';\n\n\n//     // if(!token) return null\n//     return (\n        \n//         // <div className=\"Footer\">\n            \n//         //     {/* <div className=\"footer_left\">\n//         //         <img className=\"footer_albumLogo\" src=\"https://upload.wikimedia.org/wikipedia/en/thumb/7/75/Masked_Wolf_-_Astronaut_in_the_Ocean.png/220px-Masked_Wolf_-_Astronaut_in_the_Ocean.png\" alt=\"\" />\n//         //         <div className=\"footer_songInfo\">\n//         //             <h4>Yeah!</h4>\n//         //             <p>Usher</p>\n//         //         </div>\n\n//         //     </div>\n//         //     <div className=\"footer_center\">\n//         //         <ShuffleIcon className=\"footer_green\"/>\n//         //         <SkipPreviousIcon className=\"footer_icon\"/>\n//         //         <PlayCircleOutlineOutlinedIcon fontSize=\"large\" className=\"footer_icon\"/>\n//         //         <SkipNextIcon className=\"footer_icon\"/>\n//         //         <RepeatIcon className=\"footer_green\"/>\n\n//         //     </div>\n//         //     <div className=\"footer_right\">\n//         //         <Grid container spacing={2}>\n//         //             <Grid item>\n//         //                 <PlaylistPlayIcon />\n//         //             </Grid>\n//         //             <Grid item>\n//         //                 <VolumeDownIcon />\n//         //             </Grid>\n//         //             <Grid item xs>\n//         //                 <Slider />\n//         //             </Grid>\n//         //         </Grid>\n//         //     </div> */}\n//         // </div>\n//     )\n// }\n\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport {useDataLayerValue} from \"./DataLayer\";\nimport {useState,useEffect} from \"react\";\nimport './Footer.css';\n\nfunction Footer({trackUri}){\n   \n    const [{token}, dispatch] = useDataLayerValue();\n\n    const [play,setPlay] = useState(false);\n    \n    useEffect(()=>{\n        setPlay(true);\n    },[trackUri])\n    \n    return(\n        <div className=\"Footer\">\n        <SpotifyPlayer \n        token={token}\n        showSaveIcon\n        callback={state=>{\n            if(!state.isPlaying)setPlay(false)\n        }}\n        play={play}\n        styles={{\n            bgColor: \"#282828\",\n            color: \"#FFFFFF\",\n            trackNameColor: \"#FFFFFF\",\n            trackArtistColor:\"#FFFFFF\",\n            sliderColor:\"#67b70b\",\n        }}\n        uris={trackUri?[trackUri]:[]}\n         />\n         </div>\n    )\n}\n\nexport default Footer;\n\n","/Users/imac/Documents/training/Final/spotify-clone/src/Header.js",["78"],"import React from 'react';\nimport './Header.css';\nimport { Avatar } from '@material-ui/core';\nimport {useDataLayerValue} from './DataLayer';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst Header = ({sideBar, setSideBar, smallScreen}) => {\n\n    const [{ user }, dispatch] = useDataLayerValue();\n    const toggleSideBar = () => {\n        setSideBar(!sideBar)\n    }\n    return (\n        <div className={smallScreen?\"header\": \"header headerLarge\"}>\n            {!sideBar?<MenuIcon onClick={()=>toggleSideBar()}/>:''}\n            \n            <div className=\"header_right\">\n                <Avatar src={user?.images[0]?.url} alt=\"AK\" />\n                <h4>{user?.display_name}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":24,"column":11,"nodeType":"85","messageId":"86","endLine":24,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":54,"column":5,"nodeType":"89","endLine":54,"endColumn":7,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"88","line":62,"column":5,"nodeType":"89","endLine":62,"endColumn":15,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":8,"column":13,"nodeType":"94","endLine":8,"endColumn":94},{"ruleId":"83","severity":1,"message":"95","line":11,"column":25,"nodeType":"85","messageId":"86","endLine":11,"endColumn":33},{"ruleId":"87","severity":1,"message":"96","line":29,"column":6,"nodeType":"89","endLine":29,"endColumn":14,"suggestions":"97"},{"ruleId":"83","severity":1,"message":"95","line":13,"column":31,"nodeType":"85","messageId":"86","endLine":13,"endColumn":39},{"ruleId":"83","severity":1,"message":"84","line":6,"column":13,"nodeType":"85","messageId":"86","endLine":6,"endColumn":17},{"ruleId":"83","severity":1,"message":"95","line":6,"column":20,"nodeType":"85","messageId":"86","endLine":6,"endColumn":28},{"ruleId":"83","severity":1,"message":"95","line":76,"column":21,"nodeType":"85","messageId":"86","endLine":76,"endColumn":29},{"ruleId":"83","severity":1,"message":"95","line":9,"column":22,"nodeType":"85","messageId":"86","endLine":9,"endColumn":30},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["100"],["101"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'spotify'. Either include it or remove the dependency array.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [dispatch]",{"range":"109","text":"110"},"Update the dependencies array to be: [dispatch, playlist]",{"range":"111","text":"112"},"Update the dependencies array to be: [search, spotify]",{"range":"113","text":"114"},[1354,1356],"[dispatch]",[1538,1548],"[dispatch, playlist]",[883,891],"[search, spotify]"]